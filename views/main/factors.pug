extends ../layout

block append head
    link(rel='stylesheet' href='/stylesheets/filterbox.css')
    script(src='/scripts/toggleExpander.js')
    script(src='/scripts/filter.js' subjects=`${JSON.stringify(factors)}` cycles=[{id: 'triple', values: {positive: aspects_char[1], negative: aspects_char[0], unknown: aspects_char[2]}}, {id: 'tuple', values: {positive: true, negative: false}}])

block content
    h2 Factors
    if reference
        p= reference.citation

    table 
        thead 
            tr 
                td.tcol_short Index 
                td.tcol_wide
                    .dimension.dropdown-check-list
                        span.label Name
                        ul.characteristics
                            li 
                                input(type='text' oninput=`filterScopenote('name', this.value)` placeholder='Type to filter')
                td.tcol_middle
                    .dimension.dropdown-check-list(tabindex="100")
                        span.label Complexity 
                        ul.characteristics 
                            for lc in linguisticcomplexity
                                li 
                                    input(type='checkbox' checked=true onclick=`filterDimension('linguisticcomplexity', '${lc}', this.checked);`)
                                    = lc
                td.tcol_middle
                    .dimension.dropdown-check-list(tabindex="100")
                        span.label Scope 
                        ul.characteristics 
                            for sc in scope
                                li 
                                    input(type='checkbox' checked=true onclick=`filterDimension('scope', '${sc}', this.checked);`)
                                    = sc
                for aspect in aspects 
                    td.tcol_icon.ficon_default(title=`${aspect} (click to filter)` onclick=`cycleDimension('${aspect}', null, 'triple', this)`) 
                        span
                            if aspect == 'adequacy'
                                i.fa-brands.fa-black-tie.ficon_default
                            else if aspect == 'unambiguouseness'
                                i.fa-solid.fa-hands-asl-interpreting.ficon_default
                            else if aspect == 'atomicity'
                                i.fa-solid.fa-atom.ficon_default
                            else if aspect == 'completeness'
                                i.fa-solid.fa-circle.ficon_default
                            else if aspect == 'simplicity'
                                i.fa-solid.fa-bezier-curve.ficon_default
                            else if aspect == 'compliance'
                                i.fa-solid.fa-section.ficon_default
                            else if aspect == 'correctness'
                                i.fa-solid.fa-circle-check.ficon_default
                            else if aspect == 'consistency'
                                i.fa-solid.fa-code-compare.ficon_default
                            else if aspect == 'designindependence'
                                i.fa-solid.fa-palette.ficon_default
                            else if aspect == 'feasibility'
                                i.fa-solid.fa-code-pull-request.ficon_default
                            else if aspect == 'maintainability'
                                i.fa-solid.fa-folder-open.ficon_default
                            else if aspect == 'modifiability'
                                i.fa-solid.fa-code-fork.ficon_default
                            else if aspect == 'precision'
                                i.fa-solid.fa-crosshairs.ficon_default
                            else if aspect == 'necessity'
                                i.fa-solid.fa-copy.ficon_default
                            else if aspect == 'relevancy'
                                i.fa-solid.fa-newspaper.ficon_default
                            else if aspect == 'reusability'
                                i.fa-solid.fa-recycle.ficon_default
                            else if aspect == 'traceability'
                                i.fa-solid.fa-paw.ficon_default
                            else if aspect == 'understandability'
                                i.fa-solid.fa-book-open.ficon_default
                            else if aspect == 'verifiability'
                                i.fa-solid.fa-clipboard-list.ficon_default
                            else 
                                i.fa-solid.fa-circle-dot.ficon_default
                td.tcol_middle
                    .dimension.dropdown-check-list(tabindex="100")
                        span.label References 
                        ul.characteristics
                            li 
                                input.reflistfilter(type='text' oninput=`filterReflist('reference', 'refkey', this.value)` placeholder='Type to filter' value=refkeyfilter)
                td.tcol_icon.ficon_default(title='Empirical Evidence (click to filter)' onclick=`cycleDimension('descriptions', 'empiricalevidence', 'tuple', this)`) 
                    i.fa-solid.fa-receipt.ficon_default
                td.tcol_icon.ficon_default(title='Practitioners Involved (click to filter)' onclick=`cycleDimension('descriptions', 'practitionersinvolved', 'tuple', this)`) 
                    i.fa-solid.fa-user.ficon_default
                                
        tbody
            for factor in factors 
                tr.trow_clickable(id= factor.id onclick=`toggleExpander('${factor.id}D')`)
                    td= factor.id
                    td= factor.name 
                    td= factor.linguisticcomplexity
                    td= factor.scope
                    for aspect in aspects 
                        if factor[aspect] == '?'
                            td.tc_unknown(title=`unknown impact on ${aspect}`) 
                        else if factor[aspect] == '-'
                            td.tc_bad(title=`negative impact on ${aspect}`) -
                        else if factor[aspect] == '+'
                            td.tc_good(title=`positive impact on ${aspect}`) +
                        else
                            td.tc_obsolete
                    td #{factor.reference.map(r => r.refkey).join(', ')}
                    if factor.descriptions.find(d => d.empiricalevidence) != null
                        td.tc_good(title='At least one description provides empirical evidence for this factor')
                    else
                        td.tc_bad(title='No description provides empirical evidence for this factor')
                    if factor.descriptions.find(d => d.practitionersinvolved) != null
                        td.tc_good(title='At least one description had practitioners involved')
                    else
                        td.tc_bad(title='No description had practitioners involved')
                
                tr.trow_midline.expandable(class= `${factor.id}D`)
                    td ID
                    td(colspan=3) Definition(s)
                    td(colspan=aspects.length) Impact
                    td Reference
                    td 
                    td 
                for description in factor.descriptions
                    tr.expandable.trow_minor(class= `${factor.id}D`)
                        td= description.id
                        td(colspan=3)= description.definition
                        td(colspan=aspects.length)= description.impact

                        - var ref = factor.reference.find(r => String(r._id) == String(description.reference))
                        td(title=ref.citation)= ref.refkey

                        if description.empiricalevidence
                            td.tc_good(title='This description provides empirical evidence for this factor')
                        else
                            td.tc_bad(title='This description does not provide empirical evidence for this factor') 

                        if description.practitionersinvolved
                            td.tc_good(title='This description had practitioners involved')
                        else
                            td.tc_bad(title='This description did not have practitioners involved')